// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  posts     Post[]
  profile   Profile?
  groups    Group[]   @relation("UserGroups")
}

model Profile {
  id        Int     @id @default(autoincrement())
  bio       String?
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int     @unique
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  content     String?
  published   Boolean   @default(false)
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    Int

  // Many-to-One: Post -> Category
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
}

model Group {
  id      Int     @id @default(autoincrement())
  name    String
  users   User[]  @relation("UserGroups")
}

model Category {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  posts  Post[]  // One-to-Many: Category -> Posts
}
